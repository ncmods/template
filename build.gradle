plugins {
	id "checkstyle"
	id "fabric-loom" version "0.2.6-SNAPSHOT"
	id "maven-publish"
}

checkstyle {
	configFile file("checkstyle.xml")
}
checkstyleMain {
    source = "src/main/java/io/github/ncmods"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version          = project.mod_version
group            = project.maven_group

minecraft {
	refmapName = "${project.archives_base_name}_mod_refmap.json"
}

dependencies {
	minecraft      "com.mojang:minecraft:${project.minecraft_version}"
	mappings       "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modCompile     "net.fabricmc:fabric-loader:${project.loader_version}"
	modCompile     "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	implementation "com.google.code.findbugs:jsr305:3.0.2"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "name":        project.mod_name,
           "desc":        project.mod_description,
           "version":     project.version,
           "base_name":   project.archives_base_name,
           "maven_group": project.maven_group
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
	}
}
